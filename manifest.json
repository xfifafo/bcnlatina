{
     "name": "BCN Latina Radio",
     "short_name": "BCN Latina",
     "description": "Radio latina en directo desde Barcelona",
     "start_url": "/",
     "display": "standalone",
     "background_color": "#f4f4f4",
     "theme_color": "#ffa500",
     "icons": [
       {
         "src": "/assets/logo.png",
         "sizes": "192x192",
         "type": "image/png",
         "purpose": "any maskable"
       },
       {
         "src": "/assets/logo.png",
         "sizes": "512x512",
         "type": "image/png",
         "purpose": "any maskable"
       }
     ],
     "orientation": "portrait",
     "lang": "es",
     "dir": "ltr",
     "categories": ["music", "entertainment"]
   }
      - Haz clic en "Commit new file"

3. **Para el Service Worker (sw.js):**
   - En tu repositorio, haz clic en "Add file" > "Create new file"
   - Nombra el archivo como "sw.js"
   - Copia y pega este contenido:
      const CACHE_NAME = 'bcn-latina-radio-v1';
   const ASSETS_TO_CACHE = [
     '/',
     '/assets/logo.png',
     '/manifest.json',
     '/sw.js',
     'https://stream.zeno.fm/2kd6wvz7zxhvv'
   ];

   self.addEventListener('install', (event) => {
     event.waitUntil(
       caches.open(CACHE_NAME).then((cache) => {
         return cache.addAll(ASSETS_TO_CACHE);
       })
     );
     self.skipWaiting();
   });

   self.addEventListener('activate', (event) => {
     event.waitUntil(
       caches.keys().then((cacheNames) => {
         return Promise.all(
           cacheNames.map((cacheName) => {
             if (cacheName !== CACHE_NAME) {
               return caches.delete(cacheName);
             }
           })
         );
       })
     );
     self.clients.claim();
   });

   self.addEventListener('fetch', (event) => {
     event.respondWith(
       caches.match(event.request).then((response) => {
         if (response) {
           return response;
         }
         return fetch(event.request).then((response) => {
           if (!response || response.status !== 200 || response.type !== 'basic') {
             return response;
           }
           const responseToCache = response.clone();
           caches.open(CACHE_NAME).then((cache) => {
             cache.put(event.request, responseToCache);
           });
           return response;
         });
       })
     );
   });
      - Haz clic en "Commit new file"

4. **Finalmente, en tu archivo HTML principal (index.html):**
   - Busca el archivo index.html en tu repositorio
   - Haz clic en el lápiz (editar)
   - Asegúrate de que dentro de la etiqueta `<head>` tengas estas líneas:
      <link rel="manifest" href="/manifest.json" />
   <meta name="theme-color" content="#ffa500" />
   <link rel="apple-touch-icon" href="/assets/logo.png" />
      - Y justo antes de cerrar el `</body>`, agrega este código:
      <script>
     if ('serviceWorker' in navigator) {
       window.addEventListener('load', () => {
         navigator.serviceWorker.register('/sw.js').catch(error => {
           console.error('Service Worker registration failed:', error);
         });
       });
     }
   </script>
      - Haz clic en "Commit changes"

Una vez que hayas subido todos estos archivos, GitHub Pages automáticamente actualizará tu sitio web. Los usuarios que visiten tu web desde un dispositivo móvil verán un botón para "Instalar la aplicación" o "Añadir a la pantalla de inicio", dependiendo del navegador que usen.

¿Necesitas que te aclare algún paso o tienes alguna duda sobre cómo hacer alguna de estas modificaciones?
